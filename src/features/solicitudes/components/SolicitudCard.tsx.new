/**
 * Componente SolicitudCard simplificado
 */

import { useState } from 'react'
import { type SolicitudAPIResponse } from '../interfaces/api.types'
import { ChevronDown, Edit, Trash2 } from 'lucide-react'
import { IconButton } from '@/shared/components/molecules/IconButton'
import { Card } from '@/shared/components/molecules/Card'

interface Props {
  solicitud: SolicitudAPIResponse
  onEdit?: (s: SolicitudAPIResponse) => void
  onDelete?: (s: SolicitudAPIResponse) => void
}

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('es-ES', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  })
}

export const SolicitudCard = ({ solicitud, onEdit, onDelete }: Props) => {
  const [isExpanded, setIsExpanded] = useState(false)

  return (
    <Card className="border border-gray-200 hover:shadow-md transition-shadow">
      <div className="p-6">
        {/* Header */}
        <div className="flex justify-between items-start mb-4">
          <div className="flex-1">
            <h3 className="text-lg font-semibold text-gray-900 mb-2">
              Solicitud #{solicitud.num_solicitud}
            </h3>
            
            {/* Badge de estado */}
            <div className="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 mb-3">
              {solicitud.estado_solicitud}
            </div>

            {/* Información básica */}
            <div className="text-sm text-gray-600 space-y-1">
              <div>
                <span className="font-medium">Cliente:</span> {solicitud.cliente.nombre}
              </div>
              <div>
                <span className="font-medium">Prueba:</span> {solicitud.prueba.prueba}
              </div>
              <div>
                <span className="font-medium">Creada:</span> {formatDate(solicitud.f_creacion)}
              </div>
              <div>
                <span className="font-medium">Muestras:</span> {solicitud.muestra.length}
              </div>
            </div>
          </div>

          {/* Actions */}
          <div className="flex items-center gap-2 ml-4">
            {onEdit && (
              <IconButton
                onClick={() => onEdit(solicitud)}
                variant="ghost"
                size="sm"
                icon={<Edit className="w-4 h-4 text-blue-600" />}
              />
            )}
            {onDelete && (
              <IconButton
                onClick={() => onDelete(solicitud)}
                variant="ghost"
                size="sm"
                icon={<Trash2 className="w-4 h-4 text-red-600" />}
              />
            )}
            <IconButton
              onClick={() => setIsExpanded(!isExpanded)}
              variant="ghost"
              size="sm"
              icon={
                <ChevronDown
                  className={`w-4 h-4 text-gray-500 transition-transform ${
                    isExpanded ? 'rotate-180' : ''
                  }`}
                />
              }
            />
          </div>
        </div>

        {/* Expanded Content */}
        {isExpanded && (
          <div className="border-t pt-4 space-y-4">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <h4 className="font-medium text-gray-900 mb-2">Fechas</h4>
                <div className="space-y-1 text-gray-600">
                  <div>
                    <span className="font-medium">Entrada:</span> {formatDate(solicitud.f_entrada)}
                  </div>
                  {solicitud.f_compromiso && (
                    <div>
                      <span className="font-medium">Compromiso:</span> {formatDate(solicitud.f_compromiso)}
                    </div>
                  )}
                  {solicitud.f_entrega && (
                    <div>
                      <span className="font-medium">Entrega:</span> {formatDate(solicitud.f_entrega)}
                    </div>
                  )}
                </div>
              </div>

              <div>
                <h4 className="font-medium text-gray-900 mb-2">Condiciones</h4>
                <div className="space-y-1 text-gray-600">
                  <div>
                    <span className="font-medium">Envío:</span> {solicitud.condiciones_envio}
                  </div>
                  <div>
                    <span className="font-medium">Tiempo en hielo:</span> {solicitud.tiempo_hielo}
                  </div>
                </div>
              </div>
            </div>

            {/* Muestras */}
            {solicitud.muestra.length > 0 && (
              <div>
                <h4 className="font-medium text-gray-900 mb-2">
                  Muestras ({solicitud.muestra.length})
                </h4>
                <div className="space-y-2">
                  {solicitud.muestra.map((muestra) => (
                    <div
                      key={muestra.id_muestra}
                      className="border-l-4 border-blue-200 pl-4 py-2 bg-gray-50 rounded"
                    >
                      <div className="text-sm">
                        <div className="font-medium">
                          {muestra.codigo_epi} - {muestra.codigo_externo}
                        </div>
                        <div className="text-gray-600 mt-1">
                          <span className="font-medium">Estado:</span> {muestra.estado_muestra}
                        </div>
                        {muestra.tipo_muestra && (
                          <div className="text-gray-600">
                            <span className="font-medium">Tipo:</span> {muestra.tipo_muestra.tipo_muestra}
                          </div>
                        )}
                        {muestra.tecnico_resp && (
                          <div className="text-gray-600">
                            <span className="font-medium">Técnico:</span> {muestra.tecnico_resp.nombre}
                          </div>
                        )}
                      </div>
                    </div>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}
      </div>
    </Card>
  )
}
